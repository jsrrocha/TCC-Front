.add-found-pet{
  max-height: 100%;
  height: 100%;
  .group{
    border-radius: 0px;
    border:none;
    overflow: visible !important;
    margin-left: 12px;
    float: left;
    margin-top: 5px;
  }
  .group-button{
    border-radius: 50%;
    border-left: none !important;
    margin-right: 3px;
  }
  .form-style{
    width: 180px !important;
    float: left;
    clear: left;
  }
 
  .mat-dialog-title{
    margin: 0 0 8px;
    text-align: center;
    color: #673ab7;
  }
  .mat-button-toggle{
    padding: 2px;
    transition: all ease-in-out 300ms;
  }
  .mat-button-toggle-checked{
    background-color: #673ab7;
  }
  .select-png-icon{
    border-radius: 50%;
    width: 45px;
    height: 45px;
    background-color: white;
  }
  .whats-png-icon{
    width: 24px;
    height: 24px;
    background-color: white;
    display:inline;
  }
  .color-png-icon{
    border-radius: 50%;
    width: 32px;
    height: 32px;
    background-color: white;
  }

  #fur-color{
   margin-left: 13px;
  }

  .border-on{
    word-wrap: break-word;
    border:solid 1px rgba(0,0,0,.42);
  }
  .mat-input-element::placeholder {
    color: black;
  }

  .description-field{
    width: 100%;
    padding: 3px;
    margin: 8px 0 3px 0;
    font-size: 14px;
    box-sizing: border-box;
    &::placeholder{
      color: black;
    }
  }
  .map-label {
    display: block;
    margin-bottom: 8px;
    font-size: 15px;
  }

  .map-location {
    position: relative; 
    width: 100%;
    height: 165px;
    z-index:2;
  }

  .actions{
    min-height: 20px !important;
    margin-bottom: 0px !important;
    display: block;
  }
  .button{
    float: right;
    margin: 5px 0 0 8px;
  }
}


/*
<mat-hint>Include area code</mat-hint>

   <span ng-switch on="interface">
      <img ng-switch-when="UP" src='green-checkmark.png'>
    <img ng-switch-default   src='big-black-X.png'>
   </span>



var input = (<HTMLInputElement>document.getElementById('add-search-local')); 

      var autocomplete2 = new google.maps.places.Autocomplete(input);

      //autocomplete2.bindTo('bounds', map);

      map.controls[google.maps.ControlPosition.TOP_CENTER].push(input); 
      // Set input autocomplete2
      autocomplete2.addListener('place_changed', () => {
        
        this.ngZone2.run(() => {
          // get the place result
          let place: google.maps.places.PlaceResult = autocomplete2.getPlace();


          // verify result
          if (place.geometry === undefined || place.geometry === null) {
            return;
          }

          map.setCenter(place.geometry.location);
          map.setZoom(16);
        });
});  

<div > 
          <input id="add-search-local" class="search-local-mark" placeholder="Busque o local">
      </div> 
*/
